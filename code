from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters

# –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —É–≥–ª–µ—Ä–æ–¥–Ω—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã
EMISSIONS = {
    "–∞–≤—Ç–æ": 0.2,
    "—Å–∞–º–æ–ª—ë—Ç": 0.25,
    "–∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä": 0.4,
    "–∞–≤—Ç–æ–±—É—Å": 0.09,
    "–≤–µ–ª–æ—Å–∏–ø–µ–¥": 0.0,
    "–º–µ—Ç—Ä–æ": 0.04,
    "—Å—Ç–∏—Ä–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞": 0.6,
    "—Å–º–∞—Ä—Ç—Ñ–æ–Ω": 0.005
}

RECOMMENDATIONS = {
    "–∞–≤—Ç–æ": "–ò—Å–ø–æ–ª—å–∑—É–π –≤–µ–ª–æ—Å–∏–ø–µ–¥ –∏–ª–∏ –∫–∞—Ä—à–µ—Ä–∏–Ω–≥.",
    "—Å–∞–º–æ–ª—ë—Ç": "–ü–ª–∞–Ω–∏—Ä—É–π –ø–æ–µ–∑–¥–∫–∏ –ø–æ –∑–µ–º–ª–µ ‚Äî —ç—Ç–æ –ø–æ–ª–µ–∑–Ω–µ–µ –¥–ª—è –ø–ª–∞–Ω–µ—Ç—ã.",
    "–∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä": "–°—Ç–∞—Ä–∞–π—Å—è –ø—Ä–æ–≤–µ—Ç—Ä–∏–≤–∞—Ç—å –ø–æ–º–µ—â–µ–Ω–∏–µ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä.",
    "–∞–≤—Ç–æ–±—É—Å": "–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! –ù–æ –∏–Ω–æ–≥–¥–∞ –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –µ–≥–æ –ø–µ—à–µ–π –ø—Ä–æ–≥—É–ª–∫–æ–π.",
    "–≤–µ–ª–æ—Å–∏–ø–µ–¥": "–¢—ã –º–æ–ª–æ–¥–µ—Ü! –≠—Ç–æ 100% —ç–∫–æ–ª–æ–≥–∏—á–Ω–æ!",
    "–º–µ—Ç—Ä–æ": "–û—á–µ–Ω—å —ç–∫–æ–ª–æ–≥–∏—á–Ω—ã–π –≤—ã–±–æ—Ä. –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ.",
    "—Å—Ç–∏—Ä–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞": "–°—Ç–∏—Ä–∞–π –≤ —Ö–æ–ª–æ–¥–Ω–æ–π –≤–æ–¥–µ –∏ –∑–∞–ø—É—Å–∫–∞–π –ø–æ–ª–Ω—ã–µ –∑–∞–≥—Ä—É–∑–∫–∏.",
    "—Å–º–∞—Ä—Ç—Ñ–æ–Ω": "–ù–µ –∑–∞—Ä—è–∂–∞–π —Ç–µ–ª–µ—Ñ–æ–Ω –Ω–æ—á—å—é, —ç–∫–æ–Ω–æ–º—å —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ."
}

user_history = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        ["–∞–≤—Ç–æ", "—Å–∞–º–æ–ª—ë—Ç", "–∞–≤—Ç–æ–±—É—Å"],
        ["–≤–µ–ª–æ—Å–∏–ø–µ–¥", "–º–µ—Ç—Ä–æ", "–∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä"],
        ["—Å—Ç–∏—Ä–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞", "—Å–º–∞—Ä—Ç—Ñ–æ–Ω"],
        ["–ù–∞–∑–∞–¥"]
    ]
    await update.message.reply_text(
        "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ, —á—Ç–æ–±—ã —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —É–≥–ª–µ—Ä–æ–¥–Ω—ã–π —Å–ª–µ–¥:",
        reply_markup=ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üë£ –° —ç—Ç–∏–º –±–æ—Ç–æ–º —Ç—ã –º–æ–∂–µ—à—å —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å–≤–æ–π —É–≥–ª–µ—Ä–æ–¥–Ω—ã–π —Å–ª–µ–¥.\n"
        "1. –ù–∞–∂–º–∏ /start\n"
        "2. –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ\n"
        "3. –í–≤–µ–¥–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–º, —á–∞—Å–æ–≤ –∏–ª–∏ —à—Ç—É–∫\n"
        "4. –ü–æ–ª—É—á–∏ –æ—Ü–µ–Ω–∫—É –≤—ã–±—Ä–æ—Å–æ–≤ –∏ –ø–æ–ª–µ–∑–Ω—ã–π —Å–æ–≤–µ—Ç üåç\n\n"
        "üìä –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—É–º–º–∞—Ä–Ω—ã–µ –≤—ã–±—Ä–æ—Å—ã: /history"
    )

async def history(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    total = user_history.get(user_id, 0)
    await update.message.reply_text(f"üìà –í—Å–µ–≥–æ —Ç—ã –≤—ã–¥–µ–ª–∏–ª {total:.2f} –∫–≥ CO‚ÇÇ. –û—Ç–ª–∏—á–Ω—ã–π —Å–ø–æ—Å–æ–± —Å–ª–µ–¥–∏—Ç—å –∑–∞ —ç–∫–æ–ª–æ–≥–∏–µ–π!")

async def handle_activity(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.lower()
    user_id = update.effective_user.id

    if text == "–Ω–∞–∑–∞–¥":
        context.user_data.clear()
        await start(update, context)
        return

    if text in EMISSIONS:
        context.user_data['activity'] = text
        await update.message.reply_text(f"–°–∫–æ–ª—å–∫–æ {'–∫–º / —á–∞—Å–æ–≤ / —à—Ç—É–∫'} —Ç—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –¥–ª—è ¬´{text}¬ª?")
    elif 'activity' in context.user_data:
        try:
            amount = float(text)
            activity_type = context.user_data['activity']
            emission = EMISSIONS[activity_type] * amount
            recommendation = RECOMMENDATIONS.get(activity_type, "–ü—Ä–æ—Å—Ç–æ –±—É–¥—å –æ—Å–æ–∑–Ω–∞–Ω–Ω–µ–µ üòá")

            user_history[user_id] = user_history.get(user_id, 0) + emission

            await update.message.reply_text(
                f"üå± –î–µ–π—Å—Ç–≤–∏–µ: {activity_type}\n"
                f"üîª –í—ã–±—Ä–æ—Å—ã CO‚ÇÇ: {emission:.2f} –∫–≥\n\n"
                f"üí° –°–æ–≤–µ—Ç: {recommendation}"
            )
            context.user_data.clear()
        except ValueError:
            await update.message.reply_text("–í–≤–µ–¥–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 5 –∏–ª–∏ 10.5).")
    else:
        await update.message.reply_text("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ —á–µ—Ä–µ–∑ /start.")

def main():
    app = ApplicationBuilder().token("7841053985:AAFLwoC66GQcLLk8JOKE1prox2nNqX_rjz4").build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(CommandHandler("history", history))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_activity))

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    app.run_polling()

if __name__ == "__main__":
    main()

